pipeline {
    agent any 

    parameters {
        choice(name: 'action', choices: 'create\ndestroy\destroyekscluster', description: 'Create/Update or destroy the EKS cluster')
        string(name: 'cluster', defaultValue: 'demo-cluster', description:"EKS cluster name") 
        string(name: 'region', defaultValue: 'us-east-1', description:"EKS cluster region") 
    }

    environment{
        ACCESS_KEY = credentials('aws_access_key_id')
        SECRET_KEY = credentials('aws_secret_access_key')
    }

    stages{
        stage('git checkout'){
            steps{
                git branch: 'main', url: 'https://github.com/cgao64/Devops_Proj_5_Counter_App.git'
            }
        }
        stage('eks connect'){
            steps{
                sh """
                    aws configure set aws_access_key_id "$ASCESS_KEY"
                    aws configure set aws_secret_access_key "$SECRET_KEY"
                    aws configure set region ""
                    aws eks --region ${params.region} update-kubeconfig --name ${params.cluster}
                """;
            }
        }
        stage('EKS deployment'){
            when {  expression { params.action == 'create'}}

            steps{
                scripts{
                    def apply = false
                    try {
                        input message: 'Please confirm to apply the initiate the deployment', ok: 'Ready to apply the config'
                        apply = true

                    }
                    catch(err){
                        apply=false
                        CurrentBuild.result= 'UNSTABLE'
                    }

                    if(apply){
                        sh """
                            kubectl apply -f .
                            """
                    }
                }
            }
        }
    }
}